import random

from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.filters import Text
from aiogram.types import ReplyKeyboardRemove

from config import TOKEN
from keyboards import kb, kb_photo, ikb

HELP_COMMAND = """
<b>/help</b> - <em>—Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥</em>
<b>/start</b> - <em>–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞</em>
<b>/description</b> - <em>–æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞</em>
"""

arr_photos = [
    'https://tlgrm.ru/_/stickers/c4a/4ce/c4a4ce46-dc17-3777-be23-d29ebbd4e25c/1.jpg',
    'https://tlgrmx.ru/stickers/156/11.png',
    'https://i.pinimg.com/564x/f8/93/dc/f893dc70557f133a6dcd84d9e23c4b33.jpg',
]
photos = dict(zip(arr_photos, ['angry', 'hungry', 'funny']))
random_photo = random.choice(list(photos.keys()))

flag = False

bot = Bot(TOKEN)
dp = Dispatcher(bot)


async def on_startup(_):
    print('I have been started.')


async def send_random(message: types.message):
    global random_photo
    random_photo = random.choice(list(photos.keys()))
    await bot.send_photo(chat_id=message.chat.id,
                         photo=random_photo,
                         caption=photos[random_photo],
                         reply_markup=ikb)


@dp.message_handler(Text(equals='Random photo'))
async def open_kb_photo(message: types.Message):
    await message.answer(text='–†–∞–Ω–¥–æ–º–Ω–∞—è —Ñ–æ—Ç–∫–∞!',
                         reply_markup=ReplyKeyboardRemove())
    await send_random(message)
    await message.delete()


@dp.message_handler(Text(equals='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
async def open_kb(message: types.Message):
    await message.answer(
        text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!',
        reply_markup=kb
    )
    await message.delete()


@dp.message_handler(commands=['start'])
async def cmd_start(message: types.Message):
    await message.answer(text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üêù', reply_markup=kb)
    await message.delete()


@dp.message_handler(commands=['help'])
async def cmd_help(message: types.Message):
    await message.answer(text=HELP_COMMAND, parse_mode='HTML')
    await message.delete()


@dp.message_handler(commands=['description'])
async def cmd_description(message: types.Message):
    await message.answer(text='–ù–∞—à –±–æ—Ç —É–º–µ–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—ã–µ —Ñ–æ—Ç–∫–∏.')
    await bot.send_sticker(
        chat_id=message.chat.id,
        sticker='CAACAgIAAxkBAAEGaqFjcjrNjuFhJ9yvX3AV4y4kOjN_TgACSwAD4FP5CycQs-qvf8GBKwQ'
    )
    await message.delete()


@dp.callback_query_handler()
async def calback_random_photo(calback: types.CallbackQuery):
    global random_photo  # ! –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    global flag

    if calback.data == 'like':
        if not flag:
            await calback.answer('–í–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å!')
            flag = not flag
        else:
            await calback.answer('–í—ã —É–∂–µ –ª–∞–π–∫–Ω—É–ª–∏!')
        # await calback.message.answer('–í–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å!')
    elif calback.data == 'dislike':
        await calback.answer('–í–∞–º –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å!')
        # await calback.message.answer('–í–∞–º –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å!')
    elif calback.data == 'main':
        await calback.message.answer(text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!',
                                     reply_markup=kb)
        await calback.message.delete()
        await calback.answer()
    else:
        random_photo = random.choice(
            list(filter(lambda x: x != random_photo, list(photos.keys()))))
        await calback.message.edit_media(
            types.InputMedia(media=random_photo, type='photo',
                             caption=photos[random_photo]),
            reply_markup=ikb)
        await calback.answer()


if __name__ == '__main__':
    executor.start_polling(
        dispatcher=dp,
        skip_updates=True,
        on_startup=on_startup
    )
